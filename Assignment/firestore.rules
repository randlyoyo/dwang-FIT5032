rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles
      allow read: if true;
      // Users can only write their own profile
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Recipes collection
    match /recipes/{recipeId} {
      // Anyone can read recipes
      allow read: if true;
      // Authenticated users can create recipes
      allow create: if isAuthenticated();
      // Only the author or admin can update/delete
      allow update: if isAuthenticated() && 
                       (resource.data.authorId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                       (resource.data.authorId == request.auth.uid || isAdmin());
    }
    
    // Reports collection (admin only)
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow write: if false; // Only cloud functions can write
    }
    
    // Default: deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}




